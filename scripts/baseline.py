"""Copyright (c) 2024 Bendabir."""

# ruff: noqa: D103
from __future__ import annotations

import contextlib
import time
import timeit


def mean(values: list[float]) -> float:
    return sum(values) / len(values)


def error() -> None:
    raise RuntimeError("Benchmarking.")


def generate(
    _prompt: str,
    *,
    _model: str = "gpt-4o-mini",
) -> str:
    time.sleep(1.0)

    return "This was generated by an AI."


def evaluate(_output: str) -> bool:
    time.sleep(0.5)

    return True


def run() -> str:
    with contextlib.suppress(RuntimeError):
        error()

    output = generate("My super prompt !")

    evaluate(output)

    return output


def main(*, _example: bool = True) -> None:
    run()


if __name__ == "__main__":
    durations = timeit.repeat(
        "main()",
        setup="from baseline import main",
        repeat=20,
        number=1,
    )
    print(  # noqa: T201
        f"min:{min(durations):.4f} avg:{mean(durations):.4f} ({durations})"
    )
