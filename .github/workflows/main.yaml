name: CI/CD
on:
  push:
    tags:
      - "[0-9]+.[0-9]+.[0-9]+"
  pull_request: {}
jobs:
  quality:
    name: Quality (python${{ matrix.python-version }})
    uses: ./.github/workflows/quality.yaml
    if: github.event_name == 'pull_request'
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9"]
    with:
      os: "ubuntu-latest"
      python-version: ${{ matrix.python-version }}
      poetry-version: "1.8.3"
  test:
    name: Test (python${{ matrix.python-version }})
    uses: ./.github/workflows/test.yaml
    if: github.event_name == 'pull_request'
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]
    with:
      os: "ubuntu-latest"
      python-version: ${{ matrix.python-version }}
      poetry-version: "1.8.3"
  build:
    name: Build (python${{ matrix.python-version }})
    uses: ./.github/workflows/build.yaml
    if: github.event_name != 'pull_request' && !(failure() || cancelled())
    needs:
      - quality
      - test
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9"]
    with:
      os: "ubuntu-latest"
      python-version: ${{ matrix.python-version }}
      poetry-version: "1.8.3"
  publish:
    name: Publish (python${{ matrix.python-version }})
    uses: ./.github/workflows/publish.yaml
    if: github.event_name != 'pull_request' && !(failure() || cancelled())
    needs:
      - build
    permissions:
      id-token: write
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9"]
    with:
      os: "ubuntu-latest"
      python-version: ${{ matrix.python-version }}
      poetry-version: "1.8.3"
